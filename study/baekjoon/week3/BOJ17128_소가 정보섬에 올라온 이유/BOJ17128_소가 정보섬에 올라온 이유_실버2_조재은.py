# n : 소의 수, q : 욱제가 장난칠 횟수
n, q = map(int, input().split())
# n개의 소들의 품질 점수
a = list(map(int, input().split()))

dp = [0] * n

#  원형으로 둘러 앉은 소들에 대해서, 연속한 네 마리 소들의 품질 점수를 곱한 값을 모두 더한 것
for i in range(n):
    dp[i] = a[i] * a[i-1] * a[i-2] * a[i-3]
ex_sum = sum(dp)

# 욱제가 장난칠 q개의 소의 번호
qs = list(map(int, input().split()))

# 욱제가 장난친 소의 갯수 만큼 돌기
for idx in qs:
    for i in range(4):              # 욱제가 한 번의 장난에서 인접한 4마리의 소들의 품질에 변화를 준다.
        new_idx = (idx-1+i) % n     # 인덱스 보정,
                                    # 실제 리스트의 인덱스는 0부터 시작하기 때문에, 우리는 idx에서 1을 빼서 리스트의 인덱스로 사용해야한다.
                                    # 그러나 입력으로 주어진 idx는 1부터 시작하므로, 리스트의 인덱스와 일치시키기 위해 1을 빼줘야한다.
        dp[new_idx] = -dp[new_idx]  # 욱제가 지정한 소의 값이 음수이면 양수로, 양수이면 음수로 변경된다.
        ex_sum += 2 * dp[new_idx]   # 특정 소에 대한 품질 변화를 전체 품질의 변화량에 추가하는 역할
                                    # 여기서 2를 곱하는 이유는 해당 소의 품질이 변화할 때, 그 변화량을 전체 품질의 변화량으로 두 번 반영하기 위해 한다.
    print(ex_sum)